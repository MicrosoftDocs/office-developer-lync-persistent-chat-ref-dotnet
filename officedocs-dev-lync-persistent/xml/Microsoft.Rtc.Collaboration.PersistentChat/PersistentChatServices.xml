<Type Name="PersistentChatServices" FullName="Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices">
  <TypeSignature Language="C#" Value="public class PersistentChatServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PersistentChatServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices" />
  <TypeSignature Language="VB.NET" Value="Public Class PersistentChatServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistentChatServices" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides access to a wide variety of persistent chat features and services, including:
            </summary>
    <remarks>
      <para>
            The supported features and services includes
            (1) Browsing the catalog of available chat rooms.
            (2) Browsing the chat history of logged chat rooms. 
            (3) Reading and writing <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle" /> data. 
            (4) Managing chat rooms (using <see cref="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.ChatRoomManagementServices" />).
            (5) Managing persistent chat users and user groups (using <see cref="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.UserServices" />). 
            (6) Accessing persistent chat server configuration and properties (through <see cref="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.ServerConfiguration" />).
            </para>
      <para>
            An instance to this class may be obtained from the <see cref="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint.PersistentChatServices" /> property on <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" />.
            </para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginBrowseChatRoomsByCategoryUri">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBrowseChatRoomsByCategoryUri (Uri categoryUri, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBrowseChatRoomsByCategoryUri(class System.Uri categoryUri, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByCategoryUri(System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBrowseChatRoomsByCategoryUri (categoryUri As Uri, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBrowseChatRoomsByCategoryUri(Uri ^ categoryUri, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryUri" Type="System.Uri" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="categoryUri">The uri of the category to search the chat rooms under</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Browse a list of chat rooms based on a category uri.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <para>
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByCriteria(System.IAsyncResult)" /> to complete this asynchronous operation.
            </para>
          <para />
        </remarks>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBrowseChatRoomsByCategoryUri">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBrowseChatRoomsByCategoryUri (Uri categoryUri, int maxResults, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBrowseChatRoomsByCategoryUri(class System.Uri categoryUri, int32 maxResults, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByCategoryUri(System.Uri,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBrowseChatRoomsByCategoryUri (categoryUri As Uri, maxResults As Integer, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBrowseChatRoomsByCategoryUri(Uri ^ categoryUri, int maxResults, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryUri" Type="System.Uri" />
        <Parameter Name="maxResults" Type="System.Int32" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="categoryUri">The uri of the category to search the chat rooms under</param>
        <param name="maxResults">The max number of results returned, 100 if null is given</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Browse a list of chat rooms based on a category uri.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <para>
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByCriteria(System.IAsyncResult)" /> to complete this asynchronous operation.
            </para>
          <para />
        </remarks>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBrowseChatRoomsByCriteria">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBrowseChatRoomsByCriteria (string criteria, bool searchDescription, bool matchAll, bool matchExactPhrase, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBrowseChatRoomsByCriteria(string criteria, bool searchDescription, bool matchAll, bool matchExactPhrase, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByCriteria(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBrowseChatRoomsByCriteria (criteria As String, searchDescription As Boolean, matchAll As Boolean, matchExactPhrase As Boolean, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBrowseChatRoomsByCriteria(System::String ^ criteria, bool searchDescription, bool matchAll, bool matchExactPhrase, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.String" />
        <Parameter Name="searchDescription" Type="System.Boolean" />
        <Parameter Name="matchAll" Type="System.Boolean" />
        <Parameter Name="matchExactPhrase" Type="System.Boolean" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="criteria">The search criteria.</param>
        <param name="searchDescription">if set to <see cref="true" /> the search will also match against the description of the chat rooms.</param>
        <param name="matchAll">if <see cref="matchExactPhrase" /> is false, the search will return only rooms that match
             all search strings if this is set to <see cref="true" />, otherwise it will return rooms that match one or
             more of the search strings.</param>
        <param name="matchExactPhrase">If <see cref="true" />, the search criteria will be treated as a single search string, otherwise
            it will be considered a whitespace delimited set of search strings.</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Browse a list of chat rooms based on a specified search criteria.
            The search will be performed against the chat room names, and optionally the description.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <para>
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByCriteria(System.IAsyncResult)" /> to complete this asynchronous operation.
            </para>
          <para />
        </remarks>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the persistent chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBrowseChatRoomsByCriteria">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBrowseChatRoomsByCriteria (string criteria, bool searchDescription, bool matchAll, bool matchExactPhrase, int maxResults, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBrowseChatRoomsByCriteria(string criteria, bool searchDescription, bool matchAll, bool matchExactPhrase, int32 maxResults, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByCriteria(System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBrowseChatRoomsByCriteria (criteria As String, searchDescription As Boolean, matchAll As Boolean, matchExactPhrase As Boolean, maxResults As Integer, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBrowseChatRoomsByCriteria(System::String ^ criteria, bool searchDescription, bool matchAll, bool matchExactPhrase, int maxResults, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.String" />
        <Parameter Name="searchDescription" Type="System.Boolean" />
        <Parameter Name="matchAll" Type="System.Boolean" />
        <Parameter Name="matchExactPhrase" Type="System.Boolean" />
        <Parameter Name="maxResults" Type="System.Int32" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="criteria">The search criteria.</param>
        <param name="searchDescription">if set to <see cref="true" /> the search will also match against description of the chat rooms.</param>
        <param name="matchAll">if <see cref="matchExactPhrase" /> is false, the search will return only rooms that match
             all search strings if this this is set to <see cref="true" />, otherwise it will return rooms that match one or
             more of the search strings.</param>
        <param name="matchExactPhrase">If <see cref="true" />, the search criteria will be treated as a single search string, otherwise
            it will be considered a whitespace delimited set of search strings.</param>
        <param name="maxResults">The max number of results to return. To return all matching results set this value to -1.</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Browse a list of chat rooms based on a specified search criteria.
            The search will be performed against the chat room names, and optionally the descriptions.
            The number of results will be limited to the number specified in the maxResults parameter. 
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <para>
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByCriteria(System.IAsyncResult)" /> to complete this asynchronous operation.
            </para>
          <para />
        </remarks>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBrowseChatRoomsByFilterCriteria">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBrowseChatRoomsByFilterCriteria (string searchTerms, bool searchDesc, string member, string manager, Uri categoryUri, Nullable&lt;Guid&gt; addinGuid, bool disabled, Nullable&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomPrivacy&gt; privacy, Nullable&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomBehavior&gt; behavior, Nullable&lt;bool&gt; invitations, bool searchInvitiations, int maxResults, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBrowseChatRoomsByFilterCriteria(string searchTerms, bool searchDesc, string member, string manager, class System.Uri categoryUri, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; addinGuid, bool disabled, valuetype System.Nullable`1&lt;valuetype Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomPrivacy&gt; privacy, valuetype System.Nullable`1&lt;valuetype Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomBehavior&gt; behavior, valuetype System.Nullable`1&lt;bool&gt; invitations, bool searchInvitiations, int32 maxResults, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByFilterCriteria(System.String,System.Boolean,System.String,System.String,System.Uri,System.Nullable{System.Guid},System.Boolean,System.Nullable{Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomPrivacy},System.Nullable{Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomBehavior},System.Nullable{System.Boolean},System.Boolean,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBrowseChatRoomsByFilterCriteria (searchTerms As String, searchDesc As Boolean, member As String, manager As String, categoryUri As Uri, addinGuid As Nullable(Of Guid), disabled As Boolean, privacy As Nullable(Of ChatRoomPrivacy), behavior As Nullable(Of ChatRoomBehavior), invitations As Nullable(Of Boolean), searchInvitiations As Boolean, maxResults As Integer, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBrowseChatRoomsByFilterCriteria(System::String ^ searchTerms, bool searchDesc, System::String ^ member, System::String ^ manager, Uri ^ categoryUri, Nullable&lt;Guid&gt; addinGuid, bool disabled, Nullable&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatRoomPrivacy&gt; privacy, Nullable&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatRoomBehavior&gt; behavior, Nullable&lt;bool&gt; invitations, bool searchInvitiations, int maxResults, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchTerms" Type="System.String" />
        <Parameter Name="searchDesc" Type="System.Boolean" />
        <Parameter Name="member" Type="System.String" />
        <Parameter Name="manager" Type="System.String" />
        <Parameter Name="categoryUri" Type="System.Uri" />
        <Parameter Name="addinGuid" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="disabled" Type="System.Boolean" />
        <Parameter Name="privacy" Type="System.Nullable&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomPrivacy&gt;" />
        <Parameter Name="behavior" Type="System.Nullable&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomBehavior&gt;" />
        <Parameter Name="invitations" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="searchInvitiations" Type="System.Boolean" />
        <Parameter Name="maxResults" Type="System.Int32" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="searchTerms">The terms to search in the name for</param>
        <param name="searchDesc">Bool deciding whether to search in the description as well as name</param>
        <param name="member">Look for all rooms that have this principal as a member</param>
        <param name="manager">Look for all rooms that have this principal as a manager</param>
        <param name="categoryUri">Search for rooms under this category</param>
        <param name="addinGuid">Search for rooms with this add-in</param>
        <param name="disabled">Search for rooms with this disabled setting</param>
        <param name="privacy">Search for rooms with this privacy setting</param>
        <param name="behavior">Search for rooms with this behavior setting</param>
        <param name="invitations">Search for rooms with this invitations setting (null =&gt; inherit)</param>
        <param name="searchInvitiations">Determines if we search using the invitations settings</param>
        <param name="maxResults">The max number of results returned</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Browse a list of chat rooms based on a set of filter criteria
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <para>
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByFilterCriteria(System.IAsyncResult)" /> to complete this asynchronous operation.
            If a parameter is null, then we do not search under that paramter. The only exceptions are searchDesc,
            which is false to not search description, and invitations, which uses the searchInvitations parameter
            to determine when to search invitations
            </para>
          <para />
        </remarks>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBrowseChatRoomsByInvitations">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBrowseChatRoomsByInvitations (int lastInviteID, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBrowseChatRoomsByInvitations(int32 lastInviteID, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByInvitations(System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBrowseChatRoomsByInvitations (lastInviteID As Integer, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBrowseChatRoomsByInvitations(int lastInviteID, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastInviteID" Type="System.Int32" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="lastInviteID">Only returns chat room invitations with an ID greater than this</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Browse the list of chat rooms to which the currently logged in user has been invited.
            Chat room invitations are issued by the server in batches, and some invitations may not be immediately available for browsing.
            
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByInvitations(System.IAsyncResult,System.Int32@)" /> to complete this asynchronous operation.
            
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBrowseChatRoomsByJoinedUser">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBrowseChatRoomsByJoinedUser (Uri userSipUri, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBrowseChatRoomsByJoinedUser(class System.Uri userSipUri, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByJoinedUser(System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBrowseChatRoomsByJoinedUser (userSipUri As Uri, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBrowseChatRoomsByJoinedUser(Uri ^ userSipUri, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSipUri" Type="System.Uri" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSipUri">The user's SIP URI.</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Browse the list of chat rooms on which the specified user is presently joined.
            
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByJoinedUser(System.IAsyncResult)" /> to complete this asynchronous operation.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userSipUri" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="userSipUri" /> is not a valid SIP URI.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBrowseChatRoomsIManage">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBrowseChatRoomsIManage (AsyncCallback userCallback, object state, uint maxResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBrowseChatRoomsIManage(class System.AsyncCallback userCallback, object state, unsigned int32 maxResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsIManage(System.AsyncCallback,System.Object,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBrowseChatRoomsIManage (userCallback As AsyncCallback, state As Object, maxResults As UInteger) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBrowseChatRoomsIManage(AsyncCallback ^ userCallback, System::Object ^ state, System::UInt32 maxResults);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="maxResults" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <param name="maxResults">The maximum number of rooms to return subject to server configured limits.</param>
        <summary>
            Browse the list of chat rooms that the currently logged in user can manage.
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsIManage(System.IAsyncResult)" /> to complete this asynchronous operation.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBrowseMyChatRooms">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBrowseMyChatRooms (AsyncCallback userCallback, object state, uint maxResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBrowseMyChatRooms(class System.AsyncCallback userCallback, object state, unsigned int32 maxResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseMyChatRooms(System.AsyncCallback,System.Object,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBrowseMyChatRooms (userCallback As AsyncCallback, state As Object, maxResults As UInteger) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBrowseMyChatRooms(AsyncCallback ^ userCallback, System::Object ^ state, System::UInt32 maxResults);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="maxResults" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <param name="maxResults">The maximum number of rooms to return subject to server configured limits.</param>
        <summary>
            Browse the list of chat rooms of which the currently logged in user is a member.
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseMyChatRooms(System.IAsyncResult)" /> to complete this asynchronous operation.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetPreferenceBundle">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetPreferenceBundle (string label, int seqId, bool provideDefault, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetPreferenceBundle(string label, int32 seqId, bool provideDefault, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginGetPreferenceBundle(System.String,System.Int32,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetPreferenceBundle (label As String, seqId As Integer, provideDefault As Boolean, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetPreferenceBundle(System::String ^ label, int seqId, bool provideDefault, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="seqId" Type="System.Int32" />
        <Parameter Name="provideDefault" Type="System.Boolean" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="label">The preference label.</param>
        <param name="seqId">The preference sequence ID.  
            Every time the <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle" /> is accessed, whether for read or write, 
            the <see cref="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle.SequenceId" /> is incremented.
            </param>
        <param name="provideDefault">If true, the server will attempt to vend a default value for the requested
            preference, if no value is defined for the given preference lable.</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Get the preference bundle identified by the specified label for the currently logged in user.
            The sequence ID indicates the version number known to the requestor.  If the requested ID matches the server version,
            no preference will be returned. 
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <para>
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndGetPreferenceBundle(System.IAsyncResult)" /> to complete this asynchronous operation.
            </para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="label" /> is null or empty.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginQueryChatHistory">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginQueryChatHistory (System.Collections.Generic.ICollection&lt;Uri&gt; chatRooms, Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryQueryOptions query, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginQueryChatHistory(class System.Collections.Generic.ICollection`1&lt;class System.Uri&gt; chatRooms, class Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryQueryOptions query, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginQueryChatHistory(System.Collections.Generic.ICollection{System.Uri},Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryQueryOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginQueryChatHistory (chatRooms As ICollection(Of Uri), query As ChatHistoryQueryOptions, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginQueryChatHistory(System::Collections::Generic::ICollection&lt;Uri ^&gt; ^ chatRooms, Microsoft::Rtc::Collaboration::PersistentChat::ChatHistoryQueryOptions ^ query, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatRooms" Type="System.Collections.Generic.ICollection&lt;System.Uri&gt;" />
        <Parameter Name="query" Type="Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryQueryOptions" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="chatRooms">The chat rooms to query.</param>
        <param name="query">The query.</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Query the chat history for the specified collection of chat rooms, using the designated <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryQueryOptions" />.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <para>
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndQueryChatHistory(System.IAsyncResult)" /> to complete this asynchronous operation.
            </para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="chatRooms" /> collection is null or empty.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginQueryChatHistory">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginQueryChatHistory (System.Collections.Generic.ICollection&lt;Uri&gt; chatRooms, string searchString, bool exactPhrase, bool caseSensitive, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginQueryChatHistory(class System.Collections.Generic.ICollection`1&lt;class System.Uri&gt; chatRooms, string searchString, bool exactPhrase, bool caseSensitive, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginQueryChatHistory(System.Collections.Generic.ICollection{System.Uri},System.String,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginQueryChatHistory (chatRooms As ICollection(Of Uri), searchString As String, exactPhrase As Boolean, caseSensitive As Boolean, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginQueryChatHistory(System::Collections::Generic::ICollection&lt;Uri ^&gt; ^ chatRooms, System::String ^ searchString, bool exactPhrase, bool caseSensitive, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chatRooms" Type="System.Collections.Generic.ICollection&lt;System.Uri&gt;" />
        <Parameter Name="searchString" Type="System.String" />
        <Parameter Name="exactPhrase" Type="System.Boolean" />
        <Parameter Name="caseSensitive" Type="System.Boolean" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="chatRooms">The chat rooms to query.</param>
        <param name="searchString">The search string.</param>
        <param name="exactPhrase">if set to <see cref="true" /> the search string is treated as an exact phrase; 
            Otherwise, the search string is treated as a collection of words to match, and any single word match yields a message in the results.</param>
        <param name="caseSensitive">if set to <see cref="true" /> treat the search as case sensitive.</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Query the chat history for the specified collection of chat rooms, using the designated search string and match options.
            </summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <para>
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndQueryChatHistory(System.IAsyncResult)" /> to complete this asynchronous operation.
            </para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="chatRooms" /> collection is null or empty.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSetPreferenceBundle">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSetPreferenceBundle (Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle prefBundle, AsyncCallback userCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSetPreferenceBundle(class Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle prefBundle, class System.AsyncCallback userCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginSetPreferenceBundle(Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSetPreferenceBundle (prefBundle As PersistentChatPreferenceBundle, userCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSetPreferenceBundle(Microsoft::Rtc::Collaboration::PersistentChat::PersistentChatPreferenceBundle ^ prefBundle, AsyncCallback ^ userCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefBundle" Type="Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prefBundle">The persistent chat preference bundle.</param>
        <param name="userCallback">The method to be invoked when this asynchronous operation completes.</param>
        <param name="state">An object to be passed back to the callback.</param>
        <summary>
            Save the given preference bundle, and increment the <see cref="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle.SequenceId" /></summary>
        <returns>An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <para>
            This request will be processed asynchronously.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndSetPreferenceBundle(System.IAsyncResult)" /> to complete this asynchronous operation.
            </para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="prefBundle" /> has invalid values. The exception contains details about the error.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="prefBundle" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatServerConnectionException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> is not established.</exception>
        <exception cref="T:System.InvalidOperationException">The chat server connection is not in a valid state to send the command.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChatRoomManagementServices">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Collaboration.PersistentChat.Management.ChatRoomManagementServices ChatRoomManagementServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Rtc.Collaboration.PersistentChat.Management.ChatRoomManagementServices ChatRoomManagementServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.ChatRoomManagementServices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChatRoomManagementServices As ChatRoomManagementServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Collaboration::PersistentChat::Management::ChatRoomManagementServices ^ ChatRoomManagementServices { Microsoft::Rtc::Collaboration::PersistentChat::Management::ChatRoomManagementServices ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Collaboration.PersistentChat.Management.ChatRoomManagementServices</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An object which supports a variety of methods for managing chat rooms.
            </summary>
        <value>The chat room management service object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DomainName">
      <MemberSignature Language="C#" Value="public string DomainName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DomainName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.DomainName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomainName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DomainName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the domain for this server.
            The <see cref="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.DomainName" /> is determined by the SIP URI of the Persistent Chat server pool.
            </summary>
        <value>The name of the domain.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBrowseChatRoomsByCategoryUri">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsByCategoryUri (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsByCategoryUri(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByCategoryUri(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndBrowseChatRoomsByCategoryUri (asyncResult As IAsyncResult) As ReadOnlyCollection(Of ChatRoomSnapshot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatRoomSnapshot ^&gt; ^ EndBrowseChatRoomsByCategoryUri(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByCategoryUri(System.Uri,System.AsyncCallback,System.Object)" /> 
            or <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByCategoryUri(System.Uri,System.Int32,System.AsyncCallback,System.Object)" /></summary>
        <returns>A collection of <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot" /> objects describing chat rooms which match the specified criteria.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">The chat server encountered an error processing the request.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
        <exception cref="T:System.InvalidOperationException">This method was invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndBrowseChatRoomsByCriteria">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsByCriteria (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsByCriteria(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByCriteria(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndBrowseChatRoomsByCriteria (asyncResult As IAsyncResult) As ReadOnlyCollection(Of ChatRoomSnapshot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatRoomSnapshot ^&gt; ^ EndBrowseChatRoomsByCriteria(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByCriteria(System.String,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
            or <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByCriteria(System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.AsyncCallback,System.Object)" /></summary>
        <returns>A collection of <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot" /> objects describing chat rooms which match the specified criteria.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">The chat server encountered an error processing the request.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
        <exception cref="T:System.InvalidOperationException">This method was invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndBrowseChatRoomsByFilterCriteria">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsByFilterCriteria (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsByFilterCriteria(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByFilterCriteria(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndBrowseChatRoomsByFilterCriteria (asyncResult As IAsyncResult) As ReadOnlyCollection(Of ChatRoomSnapshot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatRoomSnapshot ^&gt; ^ EndBrowseChatRoomsByFilterCriteria(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByFilterCriteria(System.String,System.Boolean,System.String,System.String,System.Uri,System.Nullable{System.Guid},System.Boolean,System.Nullable{Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomPrivacy},System.Nullable{Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomBehavior},System.Nullable{System.Boolean},System.Boolean,System.Int32,System.AsyncCallback,System.Object)" />.
            </summary>
        <returns>A collection of <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot" /> objects describing chat rooms which match the specified criteria</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">The chat server encountered an error processing the request.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
        <exception cref="T:System.InvalidOperationException">This method was invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndBrowseChatRoomsByInvitations">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomInvitation&gt; EndBrowseChatRoomsByInvitations (IAsyncResult asyncResult, out int lastInviteId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomInvitation&gt; EndBrowseChatRoomsByInvitations(class System.IAsyncResult asyncResult, [out] int32&amp; lastInviteId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByInvitations(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndBrowseChatRoomsByInvitations (asyncResult As IAsyncResult, ByRef lastInviteId As Integer) As ReadOnlyCollection(Of ChatRoomInvitation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatRoomInvitation ^&gt; ^ EndBrowseChatRoomsByInvitations(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] int % lastInviteId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomInvitation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="lastInviteId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <param name="lastInviteId">The lastInviteID returned from this request.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByInvitations(System.Int32,System.AsyncCallback,System.Object)" /></summary>
        <returns>
            A collection of <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomInvitation" /> objects describing each of the chat room invitations.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByInvitations(System.Int32,System.AsyncCallback,System.Object)" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">The chat server encountered an error processing the request.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
        <exception cref="T:System.InvalidOperationException">This method was invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndBrowseChatRoomsByJoinedUser">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsByJoinedUser (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsByJoinedUser(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsByJoinedUser(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndBrowseChatRoomsByJoinedUser (asyncResult As IAsyncResult) As ReadOnlyCollection(Of ChatRoomSnapshot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatRoomSnapshot ^&gt; ^ EndBrowseChatRoomsByJoinedUser(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsByJoinedUser(System.Uri,System.AsyncCallback,System.Object)" /></summary>
        <returns>A collection of <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot" /> objects describing chat rooms to which the specified user is presently joined.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">The chat server encountered an error processing the request.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
        <exception cref="T:System.InvalidOperationException">This method invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndBrowseChatRoomsIManage">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsIManage (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseChatRoomsIManage(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseChatRoomsIManage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndBrowseChatRoomsIManage (asyncResult As IAsyncResult) As ReadOnlyCollection(Of ChatRoomSnapshot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatRoomSnapshot ^&gt; ^ EndBrowseChatRoomsIManage(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsIManage(System.AsyncCallback,System.Object,System.UInt32)" /></summary>
        <returns>
            A collection of <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot" /> objects describing chat rooms that the user manages.
            See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseChatRoomsIManage(System.AsyncCallback,System.Object,System.UInt32)" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">
            The chat server encountered an error processing the request.
            </exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">
            The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            This method was invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EndBrowseMyChatRooms">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseMyChatRooms (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt; EndBrowseMyChatRooms(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndBrowseMyChatRooms(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndBrowseMyChatRooms (asyncResult As IAsyncResult) As ReadOnlyCollection(Of ChatRoomSnapshot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatRoomSnapshot ^&gt; ^ EndBrowseMyChatRooms(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseMyChatRooms(System.AsyncCallback,System.Object,System.UInt32)" /></summary>
        <returns>
            A collection of <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatRoomSnapshot" /> objects describing chat rooms of which the user is a
            memeber. See <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginBrowseMyChatRooms(System.AsyncCallback,System.Object,System.UInt32)" />.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">
            The chat server encountered an error processing the request.
            </exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">
            The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            This method was invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EndGetPreferenceBundle">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle EndGetPreferenceBundle (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle EndGetPreferenceBundle(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndGetPreferenceBundle(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetPreferenceBundle (asyncResult As IAsyncResult) As PersistentChatPreferenceBundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Rtc::Collaboration::PersistentChat::PersistentChatPreferenceBundle ^ EndGetPreferenceBundle(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginGetPreferenceBundle(System.String,System.Int32,System.Boolean,System.AsyncCallback,System.Object)" /></summary>
        <returns>The requested preference bundle, or null if no preference was found.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">The chat server encountered an error processing the request.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
        <exception cref="T:System.InvalidOperationException">This method was invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint Endpoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoint As PersistentChatEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Collaboration::PersistentChat::PersistentChatEndpoint ^ Endpoint { Microsoft::Rtc::Collaboration::PersistentChat::PersistentChatEndpoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the endpoint that this service object is tied to.
            </summary>
        <value>The endpoint.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndQueryChatHistory">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryResult&gt; EndQueryChatHistory (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryResult&gt; EndQueryChatHistory(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndQueryChatHistory(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndQueryChatHistory (asyncResult As IAsyncResult) As ReadOnlyCollection(Of ChatHistoryResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;Microsoft::Rtc::Collaboration::PersistentChat::ChatHistoryResult ^&gt; ^ EndQueryChatHistory(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginQueryChatHistory(System.Collections.Generic.ICollection{System.Uri},Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryQueryOptions,System.AsyncCallback,System.Object)" />
            or <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginQueryChatHistory(System.Collections.Generic.ICollection{System.Uri},System.String,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" /></summary>
        <returns>A collection of <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.ChatHistoryResult" /> objects, one for each chat room that was queried, containing
            messages that match the query.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">The chat server encountered an error processing the request.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the  chat server.</exception>
        <exception cref="T:System.InvalidOperationException">This method invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSetPreferenceBundle">
      <MemberSignature Language="C#" Value="public int EndSetPreferenceBundle (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSetPreferenceBundle(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.EndSetPreferenceBundle(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSetPreferenceBundle (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSetPreferenceBundle(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that references this operation.</param>
        <summary>
            Completes the asynchronous request initiated by <see cref="M:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.BeginSetPreferenceBundle(Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatPreferenceBundle,System.AsyncCallback,System.Object)" /></summary>
        <returns>The new sequence ID of the preference bundle, as set by the persistent chat server.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> is null.</exception>
        <exception cref="T:Microsoft.Rtc.Collaboration.PersistentChat.CommandFailedException">The chat server encountered an error processing the request.</exception>
        <exception cref="T:Microsoft.Rtc.Signaling.RealTimeException">The <see cref="T:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatEndpoint" /> encountered an error communicating with the chat server.</exception>
        <exception cref="T:System.InvalidOperationException">This method was invoked multiple times with the same <see cref="T:System.IAsyncResult" /> instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="RootCategoryUri">
      <MemberSignature Language="C#" Value="public Uri RootCategoryUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RootCategoryUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.RootCategoryUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootCategoryUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ RootCategoryUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Root Category URI.
            The Root Category is the single uri which has no parent category,
            and from which all other chat rooms and categories are inherited.
            Use this category as a starting point to explore the entire hierarchy of chat rooms and categories.
            </summary>
        <value>The root category URI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerConfiguration">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServerConfiguration ServerConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServerConfiguration ServerConfiguration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.ServerConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerConfiguration As PersistentChatServerConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Collaboration::PersistentChat::PersistentChatServerConfiguration ^ ServerConfiguration { Microsoft::Rtc::Collaboration::PersistentChat::PersistentChatServerConfiguration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An object describing the server configuration.
            </summary>
        <value>The server configuration.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime ServerTimeUtc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ServerTimeUtc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.ServerTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ServerTimeUtc { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the server time in UTC (Coordinated Universal Time) when this endpoint was established.
            Use this value to compute time zone offsets between the server and the client for determing any shift in message timestamps that
            may exist due to small differences in the system clocks.
            </summary>
        <value>The server time in UTC.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserServices">
      <MemberSignature Language="C#" Value="public Microsoft.Rtc.Collaboration.PersistentChat.Management.PersistentChatUserServices UserServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Rtc.Collaboration.PersistentChat.Management.PersistentChatUserServices UserServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Rtc.Collaboration.PersistentChat.PersistentChatServices.UserServices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserServices As PersistentChatUserServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Rtc::Collaboration::PersistentChat::Management::PersistentChatUserServices ^ UserServices { Microsoft::Rtc::Collaboration::PersistentChat::Management::PersistentChatUserServices ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Rtc.Collaboration.PersistentChat</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Rtc.Collaboration.PersistentChat.Management.PersistentChatUserServices</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An object which supports a variety of methods for administering persistent chat users and groups.
            </summary>
        <value>The user administration service object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>